#!/bin/bash -eu

ROOD_DIR=$(cd $(dirname $0)/..; pwd)


FLG_DATABASE=
while getopts dn OPT
do
  case $OPT in
    "d" ) FLG_DATABASE="TRUE" ;;
  esac
done

shift $((OPTIND - 1))


#環境変数の設定
CONTAINER_NAME="database"
DATABASE_NAME="task_manager"
NETWORK_NAME="task_manager"


#Dockerネットワークなければ作成
echo "Creating Docker network '$NETWORK_NAME' if not exists..."
docker network ls | grep -wq $NETWORK_NAME || docker network create $NETWORK_NAME


if [ -n "$FLG_DATABASE" ]; then
    #データベースコンテナがなければ作成
    echo "Starting the database container..."
    docker-compose -f docker-compose.db.yml up -d

    #接続確認
    echo "Waiting for PostgreSQL to be ready..."
    RETRY_COUNT=0
    MAX_RETRIES=5
    until docker exec $CONTAINER_NAME pg_isready -U postgres || [ $RETRY_COUNT -eq $MAX_RETRIES ]; do
        echo "PostgreSQL not ready, retrying in 2 seconds..."
        sleep 2
        RETRY_COUNT=$((RETRY_COUNT + 1))
    done

    if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
        echo "Failed to connect to PostgreSQL after multiple attempts. Exiting..."
        exit 1
    fi

    #データベースをなければ作成
    echo "Creating the database '$DATABASE_NAME'..."
    docker exec $CONTAINER_NAME psql -U postgres -lqt | cut -d \| -f 1 | grep -qw $DATABASE_NAME
    if [ $? -eq 1 ]; then
        docker exec $CONTAINER_NAME psql -U postgres -c "CREATE DATABASE $DATABASE_NAME;"
        echo "Database '$DATABASE_NAME' created!"
    fi
fi

cd services/api

cp .env.example .env

php artisan serve  &



cd ../client


npm install

npm start
 